#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.22
#  in conjunction with Tcl version 8.6
#    Apr 15, 2019 11:12:07 PM +0300  platform: Windows NT

import sys
import time
import socket
import tkMessageBox

name = None
my_socket = None

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


def check_name(event):
    global w
    try:
        if not w.Text1.get("1.0", 'end-1c') or any(x in w.Text1.get("1.0", 'end-1c') for x in [chr(i) for i in range(32, 127) if i not in range(65, 92) + range(97, 123) + range(48, 58) and i != 32 and i != 46 and i != 45]) or any(x in w.Text1.get("1.0", 'end-1c') for x in ['\r', '\n', '\t']):
            w.Button1.config(state='disable')
        else:
            w.Button1.config(state='normal')
    except Exception:
        pass


def get_parameter(request, param):
    """
    extarcts out a single parameter from the client request
    :param request: the client request
    :param param: the needed parameter
    return: the needed parameter's value
    """
    if param == "Params":
        return request.split("\r\n\r\n")[1]
    if isinstance(param, type([])):
        return [request.split("\r\n\r\n")[1] if x == "Param" else request.split(x + ": ")[1].split("\r\n")[0] for x in param]
    if isinstance(param, type("")):
        return request.split(param + ": ")[1].split("\r\n")[0]


def finito(event=None):
    global name
    name = w.Text1.get("1.0", 'end-1c').replace('\n', '').replace('\t', '').replace('\r', '')
    w.Text1.delete("1.0", 'end-1c')
    w.Text1.insert("end", name)
    if validate(name):
        destroy_window()
        sys.stdout.flush()



def init(top, gui, *args, **kwargs):
    global w, top_level, root, my_socket
    w = gui
    top_level = top
    root = top
    my_socket = args[0]


def validate(namei):
    global my_socket
    if not name or name == 'globally' or name == 'Main' or any(x in name for x in [chr(i) for i in range(32, 127) if i not in range(65, 92) + range(97, 123) + range(48, 58) and i != 32 and i != 46 and i != 45]) or any(x in name for x in ['\r', '\n', '\t']):
        tkMessageBox.showerror("Error!", "Username contains illegal characters!\nPlease choose a different one.")
        return False
    else:
        my_socket.send("Name: " + namei + "\r\nFunc: None\r\nTo: None\r\n\r\nNone\r\n\r\n\r\n")
        data = my_socket.recv(68 + len(namei))
        if data and get_parameter(data, 'Params') == 'OK':
            return True
        tkMessageBox.showerror("Error!", "Username is already taken!\nPlease choose a different one.")
        return False


def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import login
    login.vp_start_gui(my_socket)
